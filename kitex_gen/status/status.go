// Code generated by thriftgo (0.4.2). DO NOT EDIT.

package status

import (
	"context"
	"fmt"
	"github.com/keainya/status/kitex_gen/keainya"
)

type StatusService interface {
	Status(ctx context.Context) (r *keainya.BaseResp, err error)
}

type StatusServiceStatusArgs struct {
}

func NewStatusServiceStatusArgs() *StatusServiceStatusArgs {
	return &StatusServiceStatusArgs{}
}

func (p *StatusServiceStatusArgs) InitDefault() {
}

func (p *StatusServiceStatusArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StatusServiceStatusArgs(%+v)", *p)
}

var fieldIDToName_StatusServiceStatusArgs = map[int16]string{}

type StatusServiceStatusResult struct {
	Success *keainya.BaseResp `thrift:"success,0,optional" frugal:"0,optional,keainya.BaseResp" json:"success,omitempty"`
}

func NewStatusServiceStatusResult() *StatusServiceStatusResult {
	return &StatusServiceStatusResult{}
}

func (p *StatusServiceStatusResult) InitDefault() {
}

var StatusServiceStatusResult_Success_DEFAULT *keainya.BaseResp

func (p *StatusServiceStatusResult) GetSuccess() (v *keainya.BaseResp) {
	if !p.IsSetSuccess() {
		return StatusServiceStatusResult_Success_DEFAULT
	}
	return p.Success
}
func (p *StatusServiceStatusResult) SetSuccess(x interface{}) {
	p.Success = x.(*keainya.BaseResp)
}

func (p *StatusServiceStatusResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *StatusServiceStatusResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StatusServiceStatusResult(%+v)", *p)
}

var fieldIDToName_StatusServiceStatusResult = map[int16]string{
	0: "success",
}
